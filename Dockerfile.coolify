# Simplified Coolify Dockerfile for Shenna's Studio Backend
FROM node:20-alpine

# Install system dependencies
RUN apk add --no-cache curl netcat-openbsd

WORKDIR /app

# Copy backend files
COPY ocean-backend/package*.json ./
COPY ocean-backend/ ./

# Install all dependencies first
RUN npm install

# Build the application
RUN npm run build

# Clean up dev dependencies
RUN npm prune --production

# Create comprehensive startup script with enhanced database handling
RUN echo '#!/bin/sh' > /app/start.sh && \
    echo 'echo "🌊 Starting Shenna Studio Backend..."' >> /app/start.sh && \
    echo 'echo "Database: $DATABASE_URL"' >> /app/start.sh && \
    echo 'echo "Redis: $REDIS_URL"' >> /app/start.sh && \
    echo 'echo "Environment: $NODE_ENV"' >> /app/start.sh && \
    echo '' >> /app/start.sh && \
    echo '# Wait for database to be ready' >> /app/start.sh && \
    echo 'echo "⏳ Waiting for database connection..."' >> /app/start.sh && \
    echo 'for i in $(seq 1 30); do' >> /app/start.sh && \
    echo '  if npx medusa db:create 2>/dev/null || echo "Database already exists"; then' >> /app/start.sh && \
    echo '    echo "✅ Database connection established"' >> /app/start.sh && \
    echo '    break' >> /app/start.sh && \
    echo '  fi' >> /app/start.sh && \
    echo '  echo "Waiting for database... attempt $i/30"' >> /app/start.sh && \
    echo '  sleep 2' >> /app/start.sh && \
    echo 'done' >> /app/start.sh && \
    echo '' >> /app/start.sh && \
    echo '# Always run migrations (safe to run multiple times)' >> /app/start.sh && \
    echo 'echo "🔄 Running database migrations..."' >> /app/start.sh && \
    echo 'npx medusa db:migrate || echo "⚠️ Migration failed but continuing..."' >> /app/start.sh && \
    echo '' >> /app/start.sh && \
    echo '# Create admin if enabled or if no admin exists' >> /app/start.sh && \
    echo 'if [ "$AUTO_CREATE_ADMIN" != "false" ]; then' >> /app/start.sh && \
    echo '  echo "👤 Creating/updating admin user..."' >> /app/start.sh && \
    echo '  npm run create-admin || echo "⚠️ Admin creation failed but continuing..."' >> /app/start.sh && \
    echo 'fi' >> /app/start.sh && \
    echo '' >> /app/start.sh && \
    echo '# Seed data if enabled' >> /app/start.sh && \
    echo 'if [ "$AUTO_SEED" = "true" ]; then' >> /app/start.sh && \
    echo '  echo "🌱 Seeding database with sample data..."' >> /app/start.sh && \
    echo '  npm run seed || echo "⚠️ Seeding failed but continuing..."' >> /app/start.sh && \
    echo 'fi' >> /app/start.sh && \
    echo '' >> /app/start.sh && \
    echo '# Final health check before starting server' >> /app/start.sh && \
    echo 'echo "🏥 Performing health checks..."' >> /app/start.sh && \
    echo 'echo "Database URL: ${DATABASE_URL:0:50}..."' >> /app/start.sh && \
    echo 'echo "Redis URL: ${REDIS_URL:0:30}..."' >> /app/start.sh && \
    echo 'echo "Admin Email: $ADMIN_EMAIL"' >> /app/start.sh && \
    echo '' >> /app/start.sh && \
    echo 'echo "🚀 Starting Medusa server..."' >> /app/start.sh && \
    echo 'exec npm start' >> /app/start.sh && \
    chmod +x /app/start.sh

# Expose ports
EXPOSE 9000 7001

# Health check
HEALTHCHECK --interval=30s --timeout=15s --start-period=120s --retries=5 \
  CMD curl -f http://localhost:9000/health || exit 1

# Start the application
CMD ["/app/start.sh"]