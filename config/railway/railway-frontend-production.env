# Railway Frontend Environment Variables (Production)
# ================================================
# Copy these to Railway Frontend Service → Variables tab
# Last Updated: 2025-01-07

# ================================================
# MEDUSA BACKEND CONNECTION
# ================================================

# Backend API URL (must match backend STORE_CORS configuration)
NEXT_PUBLIC_MEDUSA_BACKEND_URL="https://api.shennastudio.com"

# Publishable API Key (get from Medusa Admin after backend deployment)
# Steps to get this:
# 1. Deploy backend and login to admin panel: https://api.shennastudio.com/app
# 2. Go to Settings → Publishable API Keys
# 3. Create new key or copy existing key
# 4. Paste the key value here
NEXT_PUBLIC_MEDUSA_PUBLISHABLE_KEY="pk_REPLACE_WITH_ACTUAL_KEY_FROM_ADMIN_PANEL"

# ================================================
# STRIPE PAYMENT INTEGRATION
# ================================================

# Stripe Secret Key (server-side only - NOT exposed to browser)
STRIPE_SECRET_KEY="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"

# Stripe Publishable Key (client-side - safe to expose)
NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY="pk_live_51RdPwMP4GPds5FMqYouB5PBrSK8udOL1PcTXM6J4rGqIKnA75jTTBOGqkMGKIDRnqOSxIK4BakHFUFXK9Bd0TTGB00VoS4YZTX"

# ================================================
# NEXTAUTH CONFIGURATION
# ================================================

# NextAuth Secret (generate with: openssl rand -base64 32)
NEXTAUTH_SECRET="REPLACE_WITH_OUTPUT_OF_openssl_rand_base64_32"

# NextAuth URL (must match your frontend domain)
NEXTAUTH_URL="https://shennastudio.com"

# ================================================
# SERVER CONFIGURATION
# ================================================

# Environment
NODE_ENV="production"

# Disable Next.js telemetry
NEXT_TELEMETRY_DISABLED="1"

# Server binding (Railway requires 0.0.0.0)
HOSTNAME="0.0.0.0"

# Port (Railway auto-detects, but explicit is good)
PORT="3000"

# ================================================
# CORS CONFIGURATION NOTES
# ================================================
# Frontend CORS is handled in next.config.js and backend medusa-config.ts
#
# BACKEND CORS (already configured in backend service):
# - STORE_CORS=https://shennastudio.com,https://www.shennastudio.com
# - ADMIN_CORS=https://api.shennastudio.com
# - AUTH_CORS=https://shennastudio.com,https://www.shennastudio.com,https://api.shennastudio.com
#
# FRONTEND CORS (configured in next.config.js):
# - Access-Control-Allow-Origin: https://api.shennastudio.com (production)
# - Access-Control-Allow-Credentials: true
# - Access-Control-Allow-Headers: Authorization, X-Medusa-Access-Token, etc.
#
# IMPORTANT: The frontend domain MUST be in backend's STORE_CORS
# IMPORTANT: The backend domain MUST be in frontend's Access-Control-Allow-Origin

# ================================================
# OPTIONAL: CLOUDINARY (if using for images)
# ================================================

# Cloudinary Configuration (uncomment if using)
# CLOUDINARY_CLOUD_NAME="your-cloud-name"
# CLOUDINARY_API_KEY="your-api-key"
# CLOUDINARY_API_SECRET="your-api-secret"
# NEXT_PUBLIC_CLOUDINARY_CLOUD_NAME="your-cloud-name"

# ================================================
# OPTIONAL: ALGOLIA (if using for search)
# ================================================

# Algolia Configuration (uncomment if using)
# NEXT_PUBLIC_ALGOLIA_APPLICATION_ID="your-app-id"
# NEXT_PUBLIC_ALGOLIA_SEARCH_API_KEY="your-search-key"
# ALGOLIA_ADMIN_API_KEY="your-admin-key"

# ================================================
# DEPLOYMENT NOTES
# ================================================
#
# 1. BACKEND MUST BE DEPLOYED FIRST
#    - Backend needs to be running to get the publishable API key
#    - Ensure backend health check passes: https://api.shennastudio.com/health
#
# 2. GET PUBLISHABLE KEY
#    - Login to admin: https://api.shennastudio.com/app
#    - Go to Settings → Publishable API Keys
#    - Copy the key and paste as NEXT_PUBLIC_MEDUSA_PUBLISHABLE_KEY
#
# 3. GENERATE NEXTAUTH_SECRET
#    - Run: openssl rand -base64 32
#    - Copy output and paste as NEXTAUTH_SECRET
#
# 4. VERIFY CORS ALIGNMENT
#    - Frontend domain in backend STORE_CORS: ✓ Already configured
#    - Backend domain in frontend CORS headers: ✓ Configured in next.config.js
#
# 5. RAILWAY SERVICE SETTINGS
#    - Root Directory: . (repository root, NOT ocean-backend)
#    - Build Command: npm ci && npm run build
#    - Start Command: npm start
#    - Port: 3000
#    - Health Check: / (homepage)
#
# 6. CUSTOM DOMAIN
#    - Primary: shennastudio.com
#    - WWW: www.shennastudio.com (redirect to primary or separate config)
#
# 7. TESTING CHECKLIST
#    - [ ] Homepage loads: https://shennastudio.com
#    - [ ] Products page loads: https://shennastudio.com/products
#    - [ ] Products fetch from backend API
#    - [ ] Cart functionality works
#    - [ ] Checkout loads Stripe form
#    - [ ] No CORS errors in browser console
#
# ================================================
# SECURITY NOTES
# ================================================
#
# NEVER commit this file with real secrets to public repositories!
# Use Railway's Variables tab to set these values securely.
#
# Variables prefixed with NEXT_PUBLIC_ are exposed to the browser.
# Variables without NEXT_PUBLIC_ are server-side only.
#
# Keep these secret (server-side only):
# - STRIPE_SECRET_KEY
# - NEXTAUTH_SECRET
# - CLOUDINARY_API_SECRET (if used)
# - ALGOLIA_ADMIN_API_KEY (if used)
#
# Safe to expose (client-side):
# - NEXT_PUBLIC_MEDUSA_BACKEND_URL
# - NEXT_PUBLIC_MEDUSA_PUBLISHABLE_KEY
# - NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY
# - NEXT_PUBLIC_CLOUDINARY_CLOUD_NAME
# - NEXT_PUBLIC_ALGOLIA_APPLICATION_ID
# - NEXT_PUBLIC_ALGOLIA_SEARCH_API_KEY
