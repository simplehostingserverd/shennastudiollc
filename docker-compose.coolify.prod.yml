version: '3.8'

name: shenna-studio-production

services:
  # Medusa Backend API (Production with external Coolify databases)
  medusa-backend:
    build:
      context: ./ocean-backend
      dockerfile: Dockerfile
    container_name: shenna-medusa-backend-prod
    restart: unless-stopped
    ports:
      - "9000:9000"    # API
      - "7001:7001"    # Admin Panel
    environment:
      # Database - Use Coolify managed PostgreSQL and Redis
      - DATABASE_URL=postgresql://postgres:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:5432/${POSTGRES_DB}
      - REDIS_URL=redis://default:${REDIS_PASSWORD}@${REDIS_HOST}:6379/0
      
      # Security - Use strong production secrets
      - NODE_ENV=production
      - JWT_SECRET=${JWT_SECRET}
      - COOKIE_SECRET=${COOKIE_SECRET}
      
      # CORS Configuration for production
      - STORE_CORS=https://shennastudio.com,https://www.shennastudio.com
      - ADMIN_CORS=https://admin.shennastudio.com
      - AUTH_CORS=https://shennastudio.com,https://www.shennastudio.com
      
      # Admin Setup
      - ADMIN_EMAIL=${ADMIN_EMAIL:-admin@shennastudio.com}
      - ADMIN_PASSWORD=${ADMIN_PASSWORD}
      
      # Auto-initialization for production
      - AUTO_MIGRATE=true
      - AUTO_SEED=true
      - AUTO_CREATE_ADMIN=true
      
      # Medusa Configuration
      - MEDUSA_ADMIN_ONBOARDING_TYPE=default
      - MEDUSA_ADMIN_ONBOARDING_NEXTJS=true
    volumes:
      - medusa_uploads:/app/uploads
      - medusa_static:/app/static
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/health"]
      interval: 30s
      timeout: 15s
      retries: 5
      start_period: 120s

  # Next.js Frontend (Production)
  frontend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: shenna-frontend-prod
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      # Backend Connection
      - NEXT_PUBLIC_MEDUSA_BACKEND_URL=https://api.shennastudio.com
      
      # Payment Processing - Use production Stripe keys
      - STRIPE_SECRET_KEY=${STRIPE_SECRET_KEY}
      - NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY=${NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY}
      
      # Search (Algolia Production)
      - NEXT_PUBLIC_ALGOLIA_APPLICATION_ID=${ALGOLIA_APPLICATION_ID}
      - NEXT_PUBLIC_ALGOLIA_SEARCH_API_KEY=${ALGOLIA_SEARCH_API_KEY}
      
      # Image Optimization (Cloudinary Production)
      - CLOUDINARY_CLOUD_NAME=${CLOUDINARY_CLOUD_NAME}
      - CLOUDINARY_API_KEY=${CLOUDINARY_API_KEY}
      - CLOUDINARY_API_SECRET=${CLOUDINARY_API_SECRET}
      
      # App Configuration
      - NODE_ENV=production
      - NEXT_TELEMETRY_DISABLED=1
      - PORT=3000
      - HOSTNAME=0.0.0.0
    depends_on:
      medusa-backend:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 30s
      timeout: 15s
      retries: 5
      start_period: 90s

# Named Volumes for production
volumes:
  medusa_uploads:
    driver: local
  medusa_static:
    driver: local

# Networks
networks:
  default:
    name: shenna-network-prod
    driver: bridge