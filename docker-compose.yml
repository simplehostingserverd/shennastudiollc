version: '3.8'

name: shennas-studio

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: shennas-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: ocean_store
      POSTGRES_USER: medusa_user
      POSTGRES_PASSWORD: medusa_secure_password_2024
      POSTGRES_INITDB_ARGS: "--encoding=UTF8 --lc-collate=C --lc-ctype=C"
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./ocean-store/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U medusa_user -d ocean_store"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: shennas-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru

  # Medusa Backend API
  medusa-backend:
    build:
      context: ./ocean-store/ocean-backend
      dockerfile: Dockerfile
    container_name: shennas-medusa-backend
    restart: unless-stopped
    ports:
      - "9000:9000"    # API
      - "7001:7001"    # Admin Panel
    environment:
      # Database
      - DATABASE_URL=postgresql://medusa_user:medusa_secure_password_2024@postgres:5432/ocean_store
      - REDIS_URL=redis://redis:6379
      
      # Security
      - NODE_ENV=production
      - JWT_SECRET=${JWT_SECRET:-your-super-secure-jwt-secret-minimum-32-characters-change-in-production}
      - COOKIE_SECRET=${COOKIE_SECRET:-your-super-secure-cookie-secret-minimum-32-characters-change-in-production}
      
      # CORS Configuration
      - STORE_CORS=${STORE_CORS:-http://localhost:3000,https://shennasstudio.com,https://www.shennasstudio.com}
      - ADMIN_CORS=${ADMIN_CORS:-http://localhost:7001,https://admin.shennasstudio.com}
      - AUTH_CORS=${AUTH_CORS:-http://localhost:3000,https://shennasstudio.com,https://www.shennasstudio.com}
      
      # Admin Setup
      - ADMIN_EMAIL=${ADMIN_EMAIL:-admin@shennasstudio.com}
      - ADMIN_PASSWORD=${ADMIN_PASSWORD:-ChangeThisPassword123!}
      
      # Medusa Configuration
      - MEDUSA_ADMIN_ONBOARDING_TYPE=default
      - MEDUSA_ADMIN_ONBOARDING_NEXTJS=true
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
    volumes:
      - medusa_uploads:/app/uploads
      - medusa_static:/app/static
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # Next.js Frontend
  frontend:
    build:
      context: ./ocean-store
      dockerfile: Dockerfile
    container_name: shennas-frontend
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      # Backend Connection
      - NEXT_PUBLIC_MEDUSA_BACKEND_URL=http://medusa-backend:9000
      
      # Payment Processing
      - STRIPE_SECRET_KEY=${STRIPE_SECRET_KEY:-sk_test_your_stripe_secret_key}
      - NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY=${NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY:-pk_test_your_stripe_publishable_key}
      
      # Search (Optional)
      - NEXT_PUBLIC_ALGOLIA_APPLICATION_ID=${ALGOLIA_APPLICATION_ID:-}
      - NEXT_PUBLIC_ALGOLIA_SEARCH_API_KEY=${ALGOLIA_SEARCH_API_KEY:-}
      
      # Image Optimization
      - CLOUDINARY_CLOUD_NAME=${CLOUDINARY_CLOUD_NAME:-}
      - CLOUDINARY_API_KEY=${CLOUDINARY_API_KEY:-}
      - CLOUDINARY_API_SECRET=${CLOUDINARY_API_SECRET:-}
      
      # App Configuration
      - NODE_ENV=production
      - NEXT_TELEMETRY_DISABLED=1
      - PORT=3000
      - HOSTNAME=0.0.0.0
    depends_on:
      medusa-backend:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s


# Named Volumes
volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  medusa_uploads:
    driver: local
  medusa_static:
    driver: local

# Networks
networks:
  default:
    name: shennas-network
    driver: bridge